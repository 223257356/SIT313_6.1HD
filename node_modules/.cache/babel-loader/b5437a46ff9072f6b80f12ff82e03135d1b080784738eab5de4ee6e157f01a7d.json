{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import'../styles/Login.css';import{signInWithGooglePopup,createUserDocFromAuth,auth}from'../utilities/firebase.js';import{signInWithEmailAndPassword,sendEmailVerification,onAuthStateChanged,signOut}from'firebase/auth';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const logGoogleUser=async()=>{const{user}=await signInWithGooglePopup();await createUserDocFromAuth(user);};const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[currentUser,setCurrentUser]=useState(null);const[error,setError]=useState('');// Handle user authentication state changes\nuseEffect(()=>{const unsubscribe=onAuthStateChanged(auth,user=>{if(user){setCurrentUser(user);if(!user.emailVerified){alert('Please verify your email to access the application.');sendEmailVerification(auth.currentUser).then(()=>{alert('Verification email sent again! Please check your inbox.');});}}else{setCurrentUser(null);}});return unsubscribe;// Cleanup the listener on unmount\n},[]);const handleSubmit=async event=>{event.preventDefault();setError('');try{const userCredential=await signInWithEmailAndPassword(auth,email,password);const user=userCredential.user;if(user&&!user.emailVerified){alert('Your email is not verified. Please check your inbox for the verification email.');sendEmailVerification(user);}}catch(err){setError(err.message);}};const handleSignOut=async()=>{await signOut(auth);setCurrentUser(null);};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"login-box\",children:!currentUser?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"signup-link\",children:/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Sign up\"})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Your email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Your password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:logGoogleUser,className:\"google-button\",children:\"Login with Google\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome, \",currentUser.email]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleSignOut,className:\"logout-button\",children:\"Sign Out\"})]})})});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","Link","signInWithGooglePopup","createUserDocFromAuth","auth","signInWithEmailAndPassword","sendEmailVerification","onAuthStateChanged","signOut","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","logGoogleUser","user","Login","email","setEmail","password","setPassword","currentUser","setCurrentUser","error","setError","unsubscribe","emailVerified","alert","then","handleSubmit","event","preventDefault","userCredential","err","message","handleSignOut","className","children","to","onSubmit","type","value","onChange","e","target","required","onClick"],"sources":["/Users/jessicawong/Projects/SIT313_4.1P/devdeakin/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Login.css';\nimport { signInWithGooglePopup, createUserDocFromAuth, auth } from '../utilities/firebase.js';\nimport { signInWithEmailAndPassword, sendEmailVerification, onAuthStateChanged, signOut } from 'firebase/auth';\n\nconst logGoogleUser = async () => {\n    const { user } = await signInWithGooglePopup();\n    await createUserDocFromAuth(user);\n};\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [currentUser, setCurrentUser] = useState(null);\n    const [error, setError] = useState('');\n\n    // Handle user authentication state changes\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setCurrentUser(user);\n                if (!user.emailVerified) {\n                    alert('Please verify your email to access the application.');\n                    sendEmailVerification(auth.currentUser)\n                        .then(() => {\n                            alert('Verification email sent again! Please check your inbox.');\n                        });\n                }\n            } else {\n                setCurrentUser(null);\n            }\n        });\n        return unsubscribe; // Cleanup the listener on unmount\n    }, []);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        try {\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            const user = userCredential.user;\n            if (user && !user.emailVerified) {\n                alert('Your email is not verified. Please check your inbox for the verification email.');\n                sendEmailVerification(user);\n            }\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const handleSignOut = async () => {\n        await signOut(auth);\n        setCurrentUser(null);\n    };\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-box\">\n                {!currentUser ? (\n                    <>\n                        <div className=\"signup-link\">\n                            <Link to=\"/signup\">Sign up</Link>\n                        </div>\n                        <h2>Login</h2>\n                        {error && <p className=\"error-message\">{error}</p>}\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"input-group\">\n                                <label>Your email</label>\n                                <input\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"input-group\">\n                                <label>Your password</label>\n                                <input\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"login-button\">Login</button>\n                            <button\n                                type=\"button\"\n                                onClick={logGoogleUser}\n                                className=\"google-button\"\n                            >\n                                Login with Google\n                            </button>\n                        </form>\n                    </>\n                ) : (\n                    <>\n                        <h2>Welcome, {currentUser.email}</h2>\n                        <button\n                            type=\"button\"\n                            onClick={handleSignOut}\n                            className=\"logout-button\"\n                        >\n                            Sign Out\n                        </button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}