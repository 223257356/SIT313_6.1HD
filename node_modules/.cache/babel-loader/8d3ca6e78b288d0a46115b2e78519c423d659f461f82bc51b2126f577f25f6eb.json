{"ast":null,"code":"var _jsxFileName = \"/Users/jessicawong/Projects/SIT313_4.1P/devdeakin/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    setError(null); // Reset error before sending request\n    setLoading(true); // Set loading state\n\n    try {\n      // API endpoint for the ChatGPT API\n      const apiUrl = 'https://api.openai.com/v1/chat/completions';\n\n      // Using environment variable for the API key\n      const apiKey = process.env.OPENAI_API_KEY;\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      };\n      const requestBody = {\n        model: 'gpt-3.5-turbo',\n        // or 'gpt-4' if you're using GPT-4\n        messages: [{\n          role: 'user',\n          content: input\n        }],\n        max_tokens: 150,\n        temperature: 0.7\n      };\n      const {\n        data\n      } = await axios.post(apiUrl, requestBody, {\n        headers\n      });\n      setResponse(data.choices[0].message.content); // Adjust based on API response format\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('There was an error sending the message. Please try again.');\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatgpt-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ChatGPT Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        sendMessage();\n      },\n      className: \"chat-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask ChatGPT a question\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"chat-button\",\n        children: loading ? 'Loading...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"1kC06keflqoYft4BZ8w4HpyD+3s=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","input","setInput","response","setResponse","error","setError","loading","setLoading","sendMessage","apiUrl","apiKey","process","env","OPENAI_API_KEY","headers","requestBody","model","messages","role","content","max_tokens","temperature","data","post","choices","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","disabled","style","color","_c","$RefreshReg$"],"sources":["/Users/jessicawong/Projects/SIT313_4.1P/devdeakin/src/components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/Chat.css';\n\nconst Chat = () => {\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const sendMessage = async () => {\n    setError(null);  // Reset error before sending request\n    setLoading(true); // Set loading state\n\n    try {\n      // API endpoint for the ChatGPT API\n      const apiUrl = 'https://api.openai.com/v1/chat/completions';\n\n      // Using environment variable for the API key\n      const apiKey = process.env.OPENAI_API_KEY;\n\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`,\n      };\n\n      const requestBody = {\n        model: 'gpt-3.5-turbo', // or 'gpt-4' if you're using GPT-4\n        messages: [{ role: 'user', content: input }],\n        max_tokens: 150,\n        temperature: 0.7,\n      };\n\n      const { data } = await axios.post(apiUrl, requestBody, { headers });\n\n      setResponse(data.choices[0].message.content); // Adjust based on API response format\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('There was an error sending the message. Please try again.');\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  return (\n    <div className=\"chatgpt-container\"> {/* Apply the CSS class */}\n      <h2>ChatGPT Integration</h2> {/* Apply styling from the CSS file */}\n\n      <form onSubmit={(e) => { e.preventDefault(); sendMessage(); }} className=\"chat-form\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Ask ChatGPT a question\"\n          className=\"chat-input\"\n        />\n        <button type=\"submit\" disabled={loading} className=\"chat-button\">\n          {loading ? 'Loading...' : 'Send'}\n        </button>\n      </form>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {response && (\n        <div className=\"chat-response\">\n          <h3>Response:</h3>\n          <p>{response}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}