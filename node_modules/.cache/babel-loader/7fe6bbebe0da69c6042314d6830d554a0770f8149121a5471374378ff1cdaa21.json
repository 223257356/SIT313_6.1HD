{"ast":null,"code":"var _jsxFileName = \"/Users/jessicawong/Projects/SIT313_4.1P/devdeakin/src/components/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth, db } from '../utilities/firebase'; // Make sure Firebase is set up\nimport { collection, addDoc, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport '../styles/Messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messaging = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Listen for authentication changes\n    const unsubscribeAuth = auth.onAuthStateChanged(user => {\n      setCurrentUser(user); // Set the current authenticated user\n    });\n\n    // Fetch messages from Firestore in real-time\n    const q = query(collection(db, 'messages'), orderBy('createdAt', 'asc'));\n    const unsubscribeMessages = onSnapshot(q, querySnapshot => {\n      let messagesList = [];\n      querySnapshot.forEach(doc => {\n        messagesList.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setMessages(messagesList);\n    });\n    return () => {\n      unsubscribeAuth(); // Unsubscribe from auth listener on unmount\n      unsubscribeMessages(); // Unsubscribe from messages listener on unmount\n    };\n  }, []);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!currentUser) {\n      console.error('No authenticated user. Please log in to send messages.');\n      return;\n    }\n    if (message.trim() === '') return;\n    const {\n      uid,\n      displayName\n    } = currentUser;\n    try {\n      await addDoc(collection(db, 'messages'), {\n        text: message,\n        uid,\n        displayName,\n        createdAt: new Date()\n      });\n      setMessage(''); // Clear input after sending\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messaging-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"messaging-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Secure Messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Communicate with other DEV@Deakin users in real-time. Messages sent here are visible to all authenticated users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.uid === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), \": \", msg.text]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to send messages.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Messaging, \"KcguP2IuhBpw4X4kEdD/p0NauAA=\");\n_c = Messaging;\nexport default Messaging;\nvar _c;\n$RefreshReg$(_c, \"Messaging\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","collection","addDoc","query","orderBy","onSnapshot","jsxDEV","_jsxDEV","Messaging","_s","message","setMessage","messages","setMessages","currentUser","setCurrentUser","unsubscribeAuth","onAuthStateChanged","user","q","unsubscribeMessages","querySnapshot","messagesList","forEach","doc","push","data","id","sendMessage","e","preventDefault","console","error","trim","uid","displayName","text","createdAt","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/jessicawong/Projects/SIT313_4.1P/devdeakin/src/components/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, db } from '../utilities/firebase'; // Make sure Firebase is set up\nimport { collection, addDoc, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport '../styles/Messages.css';\n\nconst Messaging = () => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    // Listen for authentication changes\n    const unsubscribeAuth = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user); // Set the current authenticated user\n    });\n\n    // Fetch messages from Firestore in real-time\n    const q = query(collection(db, 'messages'), orderBy('createdAt', 'asc'));\n    const unsubscribeMessages = onSnapshot(q, (querySnapshot) => {\n      let messagesList = [];\n      querySnapshot.forEach((doc) => {\n        messagesList.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(messagesList);\n    });\n\n    return () => {\n      unsubscribeAuth();  // Unsubscribe from auth listener on unmount\n      unsubscribeMessages();  // Unsubscribe from messages listener on unmount\n    };\n  }, []);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!currentUser) {\n      console.error('No authenticated user. Please log in to send messages.');\n      return;\n    }\n    if (message.trim() === '') return;\n\n    const { uid, displayName } = currentUser;\n    try {\n      await addDoc(collection(db, 'messages'), {\n        text: message,\n        uid,\n        displayName,\n        createdAt: new Date(),\n      });\n      setMessage(''); // Clear input after sending\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div className=\"messaging-container\">\n      <header className=\"messaging-header\">\n        <h2>Secure Messaging</h2>\n        <p>Communicate with other DEV@Deakin users in real-time. Messages sent here are visible to all authenticated users.</p>\n      </header>\n\n      <div className=\"messages\">\n        {messages.map((msg) => (\n          <div key={msg.id} className={`message ${msg.uid === currentUser?.uid ? 'sent' : 'received'}`}>\n            <strong>{msg.displayName}</strong>: {msg.text}\n          </div>\n        ))}\n      </div>\n\n      {currentUser ? (\n        <form onSubmit={sendMessage} className=\"message-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Type your message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      ) : (\n        <p>Please log in to send messages.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Messaging;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}