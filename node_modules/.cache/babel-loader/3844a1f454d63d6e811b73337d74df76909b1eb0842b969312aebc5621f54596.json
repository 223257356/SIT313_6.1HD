{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport{initializeApp}from\"firebase/app\";import{getAuth,signInWithPopup,GoogleAuthProvider,createUserWithEmailAndPassword}from'firebase/auth';import{getFirestore,doc,getDoc,setDoc}from'firebase/firestore';// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\nconst firebaseConfig={apiKey:\"AIzaSyAJo1-dgtdn-ZEiPXvj62BNK604j8Am-TU\",authDomain:\"deakin-web-app-566d6.firebaseapp.com\",projectId:\"deakin-web-app-566d6\",storageBucket:\"deakin-web-app-566d6.appspot.com\",messagingSenderId:\"825272061851\",appId:\"1:825272061851:web:2433d4d902505bf691db3e\"};// Initialize Firebase\ninitializeApp(firebaseConfig);const provider=new GoogleAuthProvider();provider.setCustomParameters({prompt:\"select_account\"});export const auth=getAuth();export const signInWithGooglePopup=()=>signInWithPopup(auth,provider);export const db=getFirestore();export const createUserDocFromAuth=async function(userAuth){let additionalInformation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!userAuth.email)return;const userDocRef=doc(db,'users',userAuth.uid);const userSnapshot=await getDoc(userDocRef);if(!userSnapshot.exists()){const{displayName,email}=userAuth;const createdAt=new Date();try{await setDoc(userDocRef,{displayName,email,createdAt,...additionalInformation});}catch(error){console.log('Error in creating ,'+error.message);}}return userDocRef;};export const createAuthUserWithEmailAndPassword=async(email,password)=>{if(!email||!password)return;return await createUserWithEmailAndPassword(auth,email,password);};","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocFromAuth","userAuth","additionalInformation","arguments","length","undefined","email","userDocRef","uid","userSnapshot","exists","displayName","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password"],"sources":["/Users/jessicawong/Projects/SIT313_4.1P/devdeakin/src/utilities/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAJo1-dgtdn-ZEiPXvj62BNK604j8Am-TU\",\n  authDomain: \"deakin-web-app-566d6.firebaseapp.com\",\n  projectId: \"deakin-web-app-566d6\",\n  storageBucket: \"deakin-web-app-566d6.appspot.com\",\n  messagingSenderId: \"825272061851\",\n  appId: \"1:825272061851:web:2433d4d902505bf691db3e\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters (\n    {\n        prompt:\"select_account\"\n    }\n);\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\n\nexport const createUserDocFromAuth = async(userAuth, additionalInformation = {}) => {\n    if (!userAuth.email) return;\n    const userDocRef = doc (db, 'users', userAuth.uid);\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    if (!userSnapshot.exists()) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation\n            })\n        }\n\n        catch (error){\n            console.log('Error in creating ,' + error.message);\n        }\n\n    }\n    return userDocRef;\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n    return await createUserWithEmailAndPassword(auth, email, password)\n}\n\n"],"mappings":"AAAA;AACA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,OAAO,CAAEC,eAAe,CAAEC,kBAAkB,CAAEC,8BAA8B,KAAQ,eAAe,CAC5G,OAASC,YAAY,CAAEC,GAAG,CAAEC,MAAM,CAAEC,MAAM,KAAQ,oBAAoB,CAGtE;AACA;AAEA;AACA,KAAM,CAAAC,cAAc,CAAG,CACrBC,MAAM,CAAE,yCAAyC,CACjDC,UAAU,CAAE,sCAAsC,CAClDC,SAAS,CAAE,sBAAsB,CACjCC,aAAa,CAAE,kCAAkC,CACjDC,iBAAiB,CAAE,cAAc,CACjCC,KAAK,CAAE,2CACT,CAAC,CAED;AACAf,aAAa,CAACS,cAAc,CAAC,CAE7B,KAAM,CAAAO,QAAQ,CAAG,GAAI,CAAAb,kBAAkB,CAAC,CAAC,CACzCa,QAAQ,CAACC,mBAAmB,CACxB,CACIC,MAAM,CAAC,gBACX,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,IAAI,CAAGlB,OAAO,CAAC,CAAC,CAC7B,MAAO,MAAM,CAAAmB,qBAAqB,CAAGA,CAAA,GAAMlB,eAAe,CAACiB,IAAI,CAAEH,QAAQ,CAAC,CAC1E,MAAO,MAAM,CAAAK,EAAE,CAAGhB,YAAY,CAAC,CAAC,CAEhC,MAAO,MAAM,CAAAiB,qBAAqB,CAAG,cAAAA,CAAMC,QAAQ,CAAiC,IAA/B,CAAAC,qBAAqB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3E,GAAI,CAACF,QAAQ,CAACK,KAAK,CAAE,OACrB,KAAM,CAAAC,UAAU,CAAGvB,GAAG,CAAEe,EAAE,CAAE,OAAO,CAAEE,QAAQ,CAACO,GAAG,CAAC,CAElD,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAxB,MAAM,CAACsB,UAAU,CAAC,CAE7C,GAAI,CAACE,YAAY,CAACC,MAAM,CAAC,CAAC,CAAE,CACxB,KAAM,CAAEC,WAAW,CAAEL,KAAM,CAAC,CAAGL,QAAQ,CACvC,KAAM,CAAAW,SAAS,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAE5B,GAAI,CACA,KAAM,CAAA3B,MAAM,CAACqB,UAAU,CAAE,CACrBI,WAAW,CACXL,KAAK,CACLM,SAAS,CACT,GAAGV,qBACP,CAAC,CAAC,CACN,CAEA,MAAOY,KAAK,CAAC,CACTC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAGF,KAAK,CAACG,OAAO,CAAC,CACtD,CAEJ,CACA,MAAO,CAAAV,UAAU,CACrB,CAAC,CAED,MAAO,MAAM,CAAAW,kCAAkC,CAAG,KAAAA,CAAOZ,KAAK,CAAEa,QAAQ,GAAK,CACzE,GAAI,CAACb,KAAK,EAAI,CAACa,QAAQ,CAAE,OACzB,MAAO,MAAM,CAAArC,8BAA8B,CAACe,IAAI,CAAES,KAAK,CAAEa,QAAQ,CAAC,CACtE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}