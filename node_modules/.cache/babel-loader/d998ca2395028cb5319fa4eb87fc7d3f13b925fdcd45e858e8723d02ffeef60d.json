{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'../styles/Chat.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[input,setInput]=useState('');const[response,setResponse]=useState('');const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const sendMessage=async()=>{setError(null);// Reset error before sending request\nsetLoading(true);// Set loading state\ntry{// API endpoint for the ChatGPT API\nconst apiUrl='https://api.openai.com/v1/chat/completions';// Using environment variable for the API key\nconst apiKey=process.env.REACT_APP_OPENAI_API_KEY;const headers={'Content-Type':'application/json','Authorization':\"Bearer \".concat(apiKey)};const requestBody={model:'gpt-3.5-turbo',// or 'gpt-4' if you're using GPT-4\nmessages:[{role:'user',content:input}],max_tokens:150,temperature:0.7};const{data}=await axios.post(apiUrl,requestBody,{headers});setResponse(data.choices[0].message.content);// Adjust based on API response format\n}catch(error){console.error('Error sending message:',error);setError('There was an error sending the message. Please try again.');}finally{setLoading(false);// Stop loading state\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-container\",children:[\" \",/*#__PURE__*/_jsx(\"h2\",{children:\"ChatGPT Integration\"}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();sendMessage();},className:\"chat-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Ask ChatGPT a question\",className:\"chat-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"chat-button\",children:loading?'Loading...':'Send'})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),response&&/*#__PURE__*/_jsxs(\"div\",{className:\"chat-response\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Response:\"}),/*#__PURE__*/_jsx(\"p\",{children:response})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Chat","input","setInput","response","setResponse","error","setError","loading","setLoading","sendMessage","apiUrl","apiKey","process","env","REACT_APP_OPENAI_API_KEY","headers","concat","requestBody","model","messages","role","content","max_tokens","temperature","data","post","choices","message","console","className","children","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","disabled","style","color"],"sources":["/Users/jessicawong/Projects/SIT313_4.1P/devdeakin/src/components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/Chat.css';\n\nconst Chat = () => {\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const sendMessage = async () => {\n    setError(null);  // Reset error before sending request\n    setLoading(true); // Set loading state\n\n    try {\n      // API endpoint for the ChatGPT API\n      const apiUrl = 'https://api.openai.com/v1/chat/completions';\n\n      // Using environment variable for the API key\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`,\n      };\n\n      const requestBody = {\n        model: 'gpt-3.5-turbo', // or 'gpt-4' if you're using GPT-4\n        messages: [{ role: 'user', content: input }],\n        max_tokens: 150,\n        temperature: 0.7,\n      };\n\n      const { data } = await axios.post(apiUrl, requestBody, { headers });\n\n      setResponse(data.choices[0].message.content); // Adjust based on API response format\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError('There was an error sending the message. Please try again.');\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  return (\n    <div className=\"chatgpt-container\"> {/* Apply the CSS class */}\n      <h2>ChatGPT Integration</h2> {/* Apply styling from the CSS file */}\n\n      <form onSubmit={(e) => { e.preventDefault(); sendMessage(); }} className=\"chat-form\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Ask ChatGPT a question\"\n          className=\"chat-input\"\n        />\n        <button type=\"submit\" disabled={loading} className=\"chat-button\">\n          {loading ? 'Loading...' : 'Send'}\n        </button>\n      </form>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {response && (\n        <div className=\"chat-response\">\n          <h3>Response:</h3>\n          <p>{response}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}